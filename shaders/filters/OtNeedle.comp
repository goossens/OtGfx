//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450

layout(local_size_x=16, local_size_y=16, local_size_z=1) in;

layout(set=0, binding=0) uniform sampler2D inTexture;
layout(set=0, binding=1) uniform sampler2D inOverlay;
layout(set=1, binding=0, rgba8) uniform writeonly image2D outTexture;

layout(std140, set=2, binding=0) uniform UBO {
	mat4 transform;
};

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outTexture);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 uvBg = (vec2(coord) + 0.5f) / vec2(size);
	vec2 uvFg = (transform * vec4(uvBg, 0.0f, 1.0f)).xy;

	vec4 bg = texture(inTexture, uvBg);
	vec4 fg = texture(inOverlay, uvFg);
	float inv = 1.0f - fg.a;
	float alpha = fg.a + bg.a * inv;

	imageStore(outTexture, coord, vec4(
		(fg.r * fg.a + bg.r * bg.a * inv) / alpha,
		(fg.g * fg.a + bg.g * bg.a * inv) / alpha,
		(fg.b * fg.a + bg.b * bg.a * inv) / alpha,
		alpha));
}
