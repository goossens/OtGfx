//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450

layout(local_size_x=16, local_size_y=16) in;

layout(set=0, binding=0) uniform sampler2D inTexture;
layout(set=1, binding=0, rgba8) uniform writeonly image2D outTexture;

layout(std140, set=2, binding=0) uniform UBO {
    vec4 direction;
	float brightness;
	float transparency;
};

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outTexture);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 uv = vec2(coord) / vec2(size);
	vec2 pixelSize = vec2(1.0) / vec2(size);

	vec4 color;
	vec2 offset = direction.xy * pixelSize;
	color  = texture(inTexture, uv - 4.0 * offset) * 0.05;
	color += texture(inTexture, uv - 3.0 * offset) * 0.09;
	color += texture(inTexture, uv - 2.0 * offset) * 0.12;
	color += texture(inTexture, uv - 1.0 * offset) * 0.15;
	color += texture(inTexture, uv + 0.0 * offset) * 0.16;
	color += texture(inTexture, uv + 1.0 * offset) * 0.15;
	color += texture(inTexture, uv + 2.0 * offset) * 0.12;
	color += texture(inTexture, uv + 3.0 * offset) * 0.09;
	color += texture(inTexture, uv + 4.0 * offset) * 0.05;

    imageStore(outTexture, coord, color * vec4(brightness, brightness, brightness, transparency));
}
