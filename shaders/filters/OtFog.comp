//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450
#extension GL_GOOGLE_include_directive : require

#include "utilities.glsl"

layout(local_size_x=16, local_size_y=16, local_size_z=1) in;

layout(set=0, binding=0) uniform sampler2D inTexture;
layout(set=0, binding=1) uniform sampler2D inDepth;
layout(set=1, binding=0) uniform writeonly image2D outTexture;

layout(std140, set=2, binding=0) uniform UBO {
	mat4 invProj;
	vec3 fogColor;
	float fogDensity;
};

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outTexture);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 uv = (vec2(coord) + 0.5f) / vec2(size);

	// determine depth
	float depth = texture(inDepth, uv).x;
	vec4 p = invProj * vec4(uvToClipSpace(uv, depth), 1.0f);
	vec3 pos = p.xyz / p.w;
	depth = length(pos);

	// determine fog amount
	float d = (fogDensity / 100.0) * depth;
	float fogAmount = 1.0 - clamp(exp2(d * d * -1.442695f), 0.0f, 1.0f);

	// apply fog color
	vec3 color = texture(inTexture, uv).rgb;
	imageStore(outTexture, coord, vec4(mix(color, fogColor, fogAmount), 1.0f));
}
