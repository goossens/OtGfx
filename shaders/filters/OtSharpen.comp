//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450

layout(local_size_x=16, local_size_y=16) in;

layout(set=0, binding=0) uniform sampler2D inImage;
layout(set=1, binding=0, rgba8) uniform writeonly image2D outImage;

layout(std140, set=2, binding=0) uniform UBO {
    float strength;
};

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outImage);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 uv = vec2(coord) / vec2(size);
	vec2 pixelSize = vec2(1.0) / vec2(size);
	vec3 sum = vec3(0.0);

	for (int i = 0; i < 2; i++) {
		float offset = (float(i) + 1.0) * strength;
		sum += -1.0 * texture(inImage, uv + vec2(-1.0,  0.0) * pixelSize * offset).rgb;
		sum += -1.0 * texture(inImage, uv + vec2( 0.0, -1.0) * pixelSize * offset).rgb;
		sum +=  5.0 * texture(inImage, uv + vec2( 0.0,  0.0) * pixelSize * offset).rgb;
		sum += -1.0 * texture(inImage, uv + vec2( 0.0,  1.0) * pixelSize * offset).rgb;
		sum += -1.0 * texture(inImage, uv + vec2( 1.0,  0.0) * pixelSize * offset).rgb;
	}

    imageStore(outImage, coord, vec4(sum / 2.0, 1.0));
}
