//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450

layout(local_size_x=16, local_size_y=16, local_size_z=1) in;

layout(set=0, binding=0) uniform sampler2D inTexture;
layout(set=1, binding=0) uniform writeonly image2D outTexture;

layout(std140, set=2, binding=0) uniform UBO {
	vec2 texelSize;
    float strength;
};

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outTexture);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 uv = (vec2(coord) + 0.5f) / vec2(size);
	vec3 sum = vec3(0.0f);

	for (int i = 0; i < 2; i++) {
		float offset = (float(i) + 1.0f) * strength;
		sum += -1.0 * texture(inTexture, uv + vec2(-1.0f,  0.0f) * texelSize * offset).rgb;
		sum += -1.0 * texture(inTexture, uv + vec2( 0.0f, -1.0f) * texelSize * offset).rgb;
		sum +=  5.0 * texture(inTexture, uv + vec2( 0.0f,  0.0f) * texelSize * offset).rgb;
		sum += -1.0 * texture(inTexture, uv + vec2( 0.0f,  1.0f) * texelSize * offset).rgb;
		sum += -1.0 * texture(inTexture, uv + vec2( 1.0f,  0.0f) * texelSize * offset).rgb;
	}

	imageStore(outTexture, coord, vec4(sum / 2.0f, 1.0f));
}
