//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450
#extension GL_GOOGLE_include_directive : require

#include "constants.glsl"

layout(local_size_x=16, local_size_y=16, local_size_z=1) in;

layout(set=0, binding=0) uniform sampler2D inTexture;
layout(set=1, binding=0, rgba16f) uniform writeonly imageCube outTexture;

vec3 getSamplingVector() {
    vec2 st = gl_GlobalInvocationID.xy / vec2(imageSize(outTexture));
    vec2 uv = 2.0 * vec2(st.x, 1.0-st.y) - vec2(1.0);
    vec3 result;

    if (gl_GlobalInvocationID.z == 0)      result = vec3(1.0,  uv.y, -uv.x);
    else if (gl_GlobalInvocationID.z == 1) result = vec3(-1.0, uv.y,  uv.x);
    else if (gl_GlobalInvocationID.z == 2) result = vec3(uv.x, 1.0, -uv.y);
    else if (gl_GlobalInvocationID.z == 3) result = vec3(uv.x, -1.0, uv.y);
    else if (gl_GlobalInvocationID.z == 4) result = vec3(uv.x, uv.y, 1.0);
    else if (gl_GlobalInvocationID.z == 5) result = vec3(-uv.x, uv.y, -1.0);
    return normalize(result);
}

void main(void) {
	vec3 v = getSamplingVector();

	// convert cartesian direction vector to spherical coordinates
	float phi   = atan(v.z, v.x);
	float theta = acos(v.y);

	// sample equirectangular texture
	vec4 color = texture(inTexture, vec2(phi / TWO_PI, theta / PI));

	// write out color to output cubemap
	imageStore(outTexture, ivec3(gl_GlobalInvocationID), color);
}