//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#version 450

layout(local_size_x=16, local_size_y=16) in;
layout(set=1, binding=0, rgba8) uniform writeonly image2D outImage;

vec3 colorPalette(float distance, float angle) {
	const float PI = 3.14159265358979323846;
	float theta = mod(3.0 + 3.0 * angle / PI + 1.5, 6.0);
	vec3 result = clamp(abs(mod(theta + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);
	result = mix(vec3(1.0), result, distance);
	return result;
}

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(outImage);

	if (coord.x >= size.x || coord.y >= size.y) {
		return;
	}

	vec2 sizef = size;
	vec2 uv = vec2(coord) / sizef;
	vec2 scale = (sizef.x < sizef.y) ? vec2(1.0, sizef.y / sizef.y) : vec2(sizef.x / sizef.y, 1.0);
	vec2 xy = (uv - 0.5) * 2.0 * scale;
	float distance = length(xy);
	float angle = atan(xy.x, xy.y);

	vec3 color = (distance > 1.0) ? vec3(0.0) : colorPalette(distance, angle);
    imageStore(outImage, coord, vec4(color, 1.0));
}
